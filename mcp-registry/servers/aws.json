{
  "name": "aws",
  "display_name": "AWS Labs MCP Servers",
  "description": "AWS MCP Servers â€” specialized MCP servers that bring AWS best practices directly to your development workflow. Multiple service-specific servers for different AWS services.",
  "repository": {
    "type": "git",
    "url": "https://github.com/awslabs/mcp"
  },
  "homepage": "https://github.com/awslabs/mcp",
  "author": {
    "name": "AWS Labs"
  },
  "license": "Apache-2.0",
  "categories": [
    "Dev Tools",
    "System Tools",
    "Professional Apps"
  ],
  "tags": [
    "aws",
    "cloud",
    "infrastructure",
    "devops",
    "model-context-protocol",
    "amazon"
  ],
  "installations": {
    "lambda-mcp-server": {
      "type": "uvx",
      "command": "uvx",
      "args": [
        "awslabs.lambda-mcp-server@latest"
      ],
      "env": {
        "AWS_PROFILE": "${AWS_PROFILE}",
        "AWS_REGION": "${AWS_REGION}",
        "FUNCTION_PREFIX": "${FUNCTION_PREFIX}",
        "FUNCTION_LIST": "${FUNCTION_LIST}",
        "FUNCTION_TAG_KEY": "${FUNCTION_TAG_KEY}",
        "FUNCTION_TAG_VALUE": "${FUNCTION_TAG_VALUE}"
      },
      "description": "AWS Lambda MCP server for managing Lambda functions",
      "recommended": true
    },
    "cloudformation": {
      "type": "uvx",
      "command": "uvx",
      "args": [
        "awslabs.cfn-mcp-server@latest"
      ],
      "env": {
        "AWS_PROFILE": "${AWS_PROFILE}",
        "AWS_REGION": "${AWS_REGION}"
      },
      "description": "AWS CloudFormation MCP server for stack management"
    },
    "aws-documentation": {
      "type": "uvx",
      "command": "uvx",
      "args": [
        "awslabs.aws-documentation-mcp-server@latest"
      ],
      "env": {
        "AWS_PROFILE": "${AWS_PROFILE}"
      },
      "description": "AWS Documentation MCP server for accessing AWS documentation"
    },
    "cdk": {
      "type": "uvx",
      "command": "uvx",
      "args": [
        "awslabs.cdk-mcp-server@latest"
      ],
      "env": {
        "AWS_PROFILE": "${AWS_PROFILE}",
        "AWS_REGION": "${AWS_REGION}"
      },
      "description": "AWS CDK MCP server for Cloud Development Kit operations"
    },
    "bedrock-kb-retrieval": {
      "type": "uvx",
      "command": "uvx",
      "args": [
        "awslabs.bedrock-kb-retrieval-mcp-server@latest"
      ],
      "env": {
        "AWS_PROFILE": "${AWS_PROFILE}",
        "AWS_REGION": "${AWS_REGION}"
      },
      "description": "AWS Bedrock Knowledge Base retrieval MCP server"
    },
    "core": {
      "type": "uvx",
      "command": "uvx",
      "args": [
        "awslabs.core-mcp-server@latest"
      ],
      "env": {
        "AWS_PROFILE": "${AWS_PROFILE}",
        "AWS_REGION": "${AWS_REGION}"
      },
      "description": "AWS Core MCP server for general AWS operations"
    },
    "nova-canvas": {
      "type": "uvx",
      "command": "uvx",
      "args": [
        "awslabs.nova-canvas-mcp-server@latest"
      ],
      "env": {
        "AWS_PROFILE": "${AWS_PROFILE}",
        "AWS_REGION": "${AWS_REGION}"
      },
      "description": "AWS Nova Canvas MCP server for canvas operations"
    }
  },
  "arguments": {
    "AWS_PROFILE": {
      "description": "AWS profile to use for authentication",
      "required": true,
      "example": "your-aws-profile"
    },
    "AWS_REGION": {
      "description": "AWS region to use",
      "required": false,
      "example": "us-east-1"
    },
    "FUNCTION_PREFIX": {
      "description": "Prefix for Lambda function names (Lambda server only)",
      "required": false,
      "example": "your-function-prefix"
    },
    "FUNCTION_LIST": {
      "description": "Comma-separated list of Lambda function names (Lambda server only)",
      "required": false,
      "example": "your-first-function, your-second-function"
    },
    "FUNCTION_TAG_KEY": {
      "description": "Tag key for filtering Lambda functions (Lambda server only)",
      "required": false,
      "example": "your-tag-key"
    },
    "FUNCTION_TAG_VALUE": {
      "description": "Tag value for filtering Lambda functions (Lambda server only)",
      "required": false,
      "example": "your-tag-value"
    }
  },
  "tools": [
    {
      "name": "invoke_lambda_function",
      "description": "Invoke a Lambda function (Lambda server)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "function_name": {
            "type": "string",
            "description": "Name of the Lambda function to invoke"
          },
          "payload": {
            "type": "object",
            "description": "Payload to send to the function"
          }
        },
        "required": ["function_name"]
      }
    },
    {
      "name": "list_lambda_functions",
      "description": "List Lambda functions (Lambda server)",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "deploy_cloudformation_stack",
      "description": "Deploy a CloudFormation stack (CloudFormation server)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "stack_name": {
            "type": "string",
            "description": "Name of the CloudFormation stack"
          },
          "template_body": {
            "type": "string",
            "description": "CloudFormation template body"
          }
        },
        "required": ["stack_name", "template_body"]
      }
    },
    {
      "name": "list_cloudformation_stacks",
      "description": "List CloudFormation stacks (CloudFormation server)",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "search_aws_docs",
      "description": "Search AWS documentation (Documentation server)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query for AWS documentation"
          }
        },
        "required": ["query"]
      }
    },
    {
      "name": "deploy_cdk_stack",
      "description": "Deploy a CDK stack (CDK server)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "stack_name": {
            "type": "string",
            "description": "Name of the CDK stack to deploy"
          }
        },
        "required": ["stack_name"]
      }
    },
    {
      "name": "query_bedrock_kb",
      "description": "Query Bedrock knowledge base (Bedrock KB server)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Query for the knowledge base"
          },
          "kb_id": {
            "type": "string",
            "description": "Knowledge base ID"
          }
        },
        "required": ["query", "kb_id"]
      }
    }
  ],
  "examples": [
    {
      "title": "Invoke Lambda function",
      "description": "Invoke a specific Lambda function with payload",
      "prompt": "Invoke my 'process-data' Lambda function with test data"
    },
    {
      "title": "Deploy CloudFormation stack",
      "description": "Deploy a CloudFormation stack",
      "prompt": "Deploy a new CloudFormation stack for my web application"
    },
    {
      "title": "Search AWS documentation",
      "description": "Search AWS documentation for specific topics",
      "prompt": "Search AWS documentation for Lambda best practices"
    },
    {
      "title": "Deploy CDK stack",
      "description": "Deploy a CDK stack",
      "prompt": "Deploy my CDK stack for the production environment"
    },
    {
      "title": "Query Bedrock knowledge base",
      "description": "Query a Bedrock knowledge base",
      "prompt": "Search my company knowledge base for deployment procedures"
    }
  ],
  "is_official": true
}
